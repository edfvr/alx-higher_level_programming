The ``0-add_integer`` module
============================

# python3 -m doctest -v ./tests/0-add_integer.txt

Import the function:

	>>> add_integer = __import__('0-add_integer').add_integer

SUCCESS CASES:

Test integers and floats:

	>>> add_integer(8, 9)
	17

	>>> add_integer(2, -6)
	-4

	>>> add_integer(-5, -5)
	-10

	>>> add_integer(3.4, 2.5)
	5

	>>> add_integer(-1.1, 3.1)
	2

Test use of default b=98 value:

	>>> add_integer(2)
	100

FAIL CASES:

	>>> add_integer(4, "School")
	Traceback (most recent call last):
	TypeError: b must be an integer

	>>> add_integer(None)
	Traceback (most recent call last):
	TypeError: a must be an integer
	
	>>> add_integer()
	Traceback (most recent call last):
	TypeError: add_integer() missing 1 required positional argument: 'a'

	>>> add_integer(1000e1000)
	Traceback (most recent call last):
	OverflowError: cannot convert float infinity to integer

	>>> add_integer("hello", "world")
	Traceback (most recent call last):
	TypeError: a must be an integer

	>>> add_integer(float('nan'))
	Traceback (most recent call last):
	ValueError: cannot convert float NaN to integer
